/*
  actorname: library for generating human-readable, random names
           for objects (e.g. hostnames, containers, blobs)

  Copyright 2014 Mark Christopher West <markchristopherwest@gmail.com>

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

// Package actorname is a library for generating human-readable, random
// names for objects (e.g. hostnames, containers, blobs).
package actorname

import (
	"math/rand"
	"strings"
	"time"
)

// These lists are autogenerated from the master lists in the project:
//   - https://github.com/markchristopherwest/actorname
// These lists only get modified after updating that branch, and then
// automatically updated by ./debian/update-wordlists.sh as part of
// my release process
var (
	names = [...]string{"kathy lee-gifford", "thomas calabro", "andrew shue", "doug savant", "josie bissett", "grant show", "courtney thorne-smith", "daphne zuniga", "vanessa williams", "amy locane", "heather locklear", "marcia cross", "laura leighton", "jack wagner", "kristin davis", "brooke langton", "rob estes", "kelly rutherford", "lisa rinna", "david charvet", "alyssa milano", "jamie luner", "linden ashby", "john haymes newton", "rob schneider", "john goodman", "meghan markle", "kathy griffin", "james franco", "eva longoria", "sophia bush", "parker posey", "john waters", "portia dirossi", "kathy lee-gifford", "jessica walter", "jason bateman", "jeffrey tabor"}
)

// Call this function once before using any other to get real random results
func NonDeterministicMode() {
	rand.Seed(time.Now().UnixNano())
}

// Name returns a random name from a list of actorname names.
func Name() string {
	return names[rand.Intn(len(names))]
}

// Generate generates and returns a random actor name.
// It takes two parameters:  the number of words in the name, and a separator token.
// If a single word is requested, the Name() is split by space with element 0+1 returned.
// The separator can be any charater, string, or the empty string except tilda or asterisk
func Generate(words int, separator string) string {
	var actorname = Name()
	var fullname = strings.Split(actorname, " ")
	if separator != "-" {
		var nohyphen = strings.ReplaceAll(actorname, "-", separator)
		var target = strings.ReplaceAll(nohyphen, " ", separator)
		actorname = target
	}
	if words == 1 {
		return fullname[1]
	}
	return actorname

}
